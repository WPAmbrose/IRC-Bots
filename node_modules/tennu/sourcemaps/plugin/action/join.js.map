{"version":3,"sources":["/home/havvy/tennu/tennu/src/plugin/action/join.sjs"],"names":["format","require","Promise","module","exports","client","rawf","channel","resolve","reject","undefined","Error","response","names","forChannel","handler","message","onTopic","topic","onTopicWhoTime","topicWhoTime","topicChange","who","timestamp","onNames","concat","onNamesEnd","endofnames","unsubscribe","onJoinError","err","handlers","rpl_topic","rpl_topicwhotime","rpl_namreply","rpl_endofnames","err_nosuchchannel","err_unavailresource","err_channelisfull","err_toomanychannels","err_inviteonlychan","err_bannedfromchan","err_badchannelkey","err_needreggednick","err_operonly","on","setTimeout","error","debug","off"],"mappings":"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","file":"action/join.js","sourcesContent":["const format = require(\"util\").format;\nconst Promise = require(\"bluebird\");\n\nmodule.exports = function (client, rawf) {\n    return function (channel) {\n        return new Promise(function (resolve, reject) {\n            if (channel === undefined || channel === \"\") {\n                reject(new Error(\"No channel given to join action.\"));\n                return;\n            }\n\n            const response = {\n                names: []\n            };\n\n            // Only listen to events for the channel we care about.\n            const forChannel = function (handler) {\n                return function (message) {\n                    if (message.channel === channel) {\n                        handler(message);\n                    }\n                }\n            }\n\n            // const onJoin = forChannel(function (join) {\n            //     // Nothing?\n            // });\n\n            const onTopic = forChannel(function (topic) {\n                response.topic = topic.topic;\n            });\n\n            const onTopicWhoTime = forChannel(function (topicWhoTime) {\n                response.topicChange = {\n                    who: topicWhoTime.who,\n                    timestamp: topicWhoTime.timestamp\n                };\n            });\n\n            const onNames = forChannel(function (names) {\n                response.names = response.names.concat(names);\n            });\n\n            const onNamesEnd = forChannel(function (endofnames) {\n                unsubscribe();\n                Promise.resolve(response);\n            });\n\n            const onJoinError = forChannel(function (err) {\n                unsubscribe();\n                Promise.reject(err);\n            });\n\n            const handlers = {\n                //join: onJoin,\n                rpl_topic: onTopic,\n                rpl_topicwhotime: onTopicWhoTime,\n                rpl_namreply: onNames,\n                rpl_endofnames: onNamesEnd,\n                err_nosuchchannel: onJoinError,\n                err_unavailresource: onJoinError,\n                err_channelisfull: onJoinError,\n                err_toomanychannels: onJoinError,\n                err_inviteonlychan: onJoinError,\n                err_bannedfromchan: onJoinError,\n                err_badchannelkey: onJoinError,\n                err_needreggednick: onJoinError,\n                err_operonly: onJoinError\n            };\n\n            client.on(handlers);\n\n            // Assume failure in an hour.\n            setTimeout(function () {\n                unsubscribe();\n                client.error(format(\"Attempt to join %s failed.\", channel));\n            }, 3600 * 1000);\n\n            const unsubscribe = function () {\n                client.debug(\"PluginAction\", format(\"Unsubscribing events for JOIN %s\", channel));\n                client.off(handlers);\n            };\n\n            rawf(\"JOIN :%s\", channel);\n        });\n    };\n};"],"sourceRoot":"/source/"}